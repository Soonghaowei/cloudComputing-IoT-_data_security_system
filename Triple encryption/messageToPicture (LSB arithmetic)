from PIL import Image
import numpy as np
import functools
import sys


def embedding_info(picname, savename, text):

    # text = str(text,'utf-8')
    # text = text.decode('UTF-8','ignore')

    text += '#%#'  #  as the end flog

    im = np.array(Image.open(picname))
    rows, columns, colors = im.shape
    embed = []
    for c in text:
        bin_sign = (bin(ord(c))[2:]).zfill(16)
        for i in range(16):
            embed.append(int(bin_sign[i]))

    count = 0
    for row in range(rows):
        for col in range(columns):
            for color in range(colors):
                if count < len(embed):
                    im[row][col][color] = im[row][col][color] // 2 * 2 + embed[count]
                    count += 1

    Image.fromarray(im).save(savename)


def extract_info(picname):
    im = np.array(Image.open(picname))
    rows, columns, colors = im.shape
    text = ""
    extract = np.array([], dtype=int)

    count = 0
    for row in range(rows):
        for col in range(columns):
            for color in range(colors):
                extract = np.append(extract, im[row][col][color] % 2)
                count += 1
                if count % 16 == 0:
                    bcode = functools.reduce(lambda x, y: str(x) + str(y), extract)
                    cur_char = chr(int(bcode, 2))
                    text += cur_char
                    if cur_char == '#' and text[-3:] == '#%#':
                        return text[:-3]
                    extract = np.array([], dtype=int)
                    print(str(extract))


def main():
  
    with open('source.txt', 'rb') as f:                  #source.txt is input txt file
         text = str(f.read())
    #     # text = f.read()
    #     # print(type(text))
    embedding_info('before.png', '.png', text)        # before.png is the input picture/// after.png is the output picture     

    print(extract_info('lena_new_sz.png'))



if __name__ == '__main__':
    main()
